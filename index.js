// --- 1. Import ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ---
const express = require("express");
const cors = require("cors");
const admin = require("firebase-admin");

// ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ Service Account ‡∏à‡∏≤‡∏Å Environment Variable
const serviceAccount = JSON.parse(process.env.FIREBASE_CREDENTIALS);

// --- 3. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Firebase ---
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: "https://bsem-5e4c1-default-rtdb.asia-southeast1.firebasedatabase.app"
});

const db = admin.database();
console.log("‚ñ∂Ô∏è Starting Firebase Bridge Server...");

// --- 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Server ---
const app = express(); // <--- üö® THIS LINE WAS MISSING!
app.use(cors());

// --- [‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà app.post ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î] ---
app.post("/netpie-webhook", async (req, res) => {
    // ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
    console.log(`[ENTRY] Webhook ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å ‡∏ì ‡πÄ‡∏ß‡∏•‡∏≤ ${new Date().toISOString()}`);

    try {
        let shadowData = req.body; // ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ express.json() ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô object ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß

        console.log(`[DEBUG] ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á req.body ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ${typeof shadowData}`);
        console.log(`[DEBUG] ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡∏≠‡∏á req.body ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:`, shadowData);

        // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô string ‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤ express.json() ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÅ‡∏•‡∏∞ express.text() ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ó‡∏ô
        if (typeof shadowData === 'string') {
            console.log("[DEBUG] ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô string, ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏•‡∏≠‡∏á JSON.parse() ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á");
            shadowData = JSON.parse(shadowData);
        }

        if (shadowData && Object.keys(shadowData).length > 0) {
            const deviceId = "9585c7e4-97d7-4c50-b2f1-ea5fc1125e8a"; // ‡πÉ‡∏ä‡πâ ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
            const latestDataRef = db.ref(`devices/${deviceId}/latest_data`);
            const historyRef = db.ref(`devices/${deviceId}/history`);

            const dataWithTimestamp = {
                ...shadowData,
                timestamp: admin.database.ServerValue.TIMESTAMP
            };

            await Promise.all([
                latestDataRef.set(shadowData),
                historyRef.push(dataWithTimestamp)
            ]);

            console.log("[Firebase] ‚úÖ SUCCESS! ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
            res.status(200).send("OK");
        } else {
            console.log('[Result] ‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
            res.status(400).send("Received empty data.");
        }
    } catch (error) {
        console.error("!!! [CRITICAL ERROR] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á:", error);
        res.status(500).send("Internal Server Error");
    }
});

// Endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ Server ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
app.get("/", (req, res) => {
  res.status(200).send("Firebase Bridge Server is running.");
});

// --- 5. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î Server ---
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`üöÄ API Server is ready on port ${PORT}`);
});